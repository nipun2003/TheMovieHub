package com.nipunapps.tmdb.moviedetailpage.data.dto.tv_detail

import com.nipunapps.tmdb.moviedetailpage.domain.model.TVDetailModel

data class TVDetailDto(
    val backdrop_path: String?,
    val created_by: List<CreatedBy>,
    val credits: Credits,
    val episode_run_time: List<Int>,
    val first_air_date: String,
    val genres: List<Genre>,
    val homepage: String,
    val id: Int,
    val images: Images,
    val in_production: Boolean,
    val languages: List<String>,
    val last_air_date: String,
    val last_episode_to_air: LastEpisodeToAir,
    val name: String,
    val networks: List<Network>,
    val next_episode_to_air: Any,
    val number_of_episodes: Int,
    val number_of_seasons: Int,
    val origin_country: List<String>,
    val original_language: String,
    val original_name: String,
    val overview: String,
    val popularity: Double,
    val poster_path: String?,
    val production_companies: List<ProductionCompany>,
    val production_countries: List<ProductionCountry>,
    val seasons: List<Season>,
    val spoken_languages: List<SpokenLanguage>,
    val status: String,
    val tagline: String,
    val type: String,
    val videos: Videos,
    val vote_average: Double,
    val vote_count: Int
){
    fun toTvDetailModel() : TVDetailModel{
        return TVDetailModel(
            backdrop_path = backdrop_path,
            created_by = created_by,
            casts = credits.cast.sortedBy { it.order },
            episode_run_time = episode_run_time,
            first_air_date = first_air_date,
            genres = genres,
            homepage = homepage,
            id = id,
            images = images,
            in_production = in_production,
            languages = languages,
            last_air_date = last_air_date,
            last_episode_to_air = last_episode_to_air,
            name = name,
            networks = networks,
            number_of_episodes = number_of_episodes,
            number_of_seasons = number_of_seasons,
            origin_country = origin_country,
            original_language = original_language,
            original_name = original_name,
            overview = overview,
            popularity = popularity,
            poster_path = poster_path,
            production_companies = production_companies,
            production_countries = production_countries,
            seasons = seasons,
            spoken_languages = spoken_languages,
            status = status,
            tagline = tagline,
            videos = videos,
            vote_average = vote_average
        )
    }
}